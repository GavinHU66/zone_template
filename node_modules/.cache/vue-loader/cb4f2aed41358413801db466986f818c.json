{"remainingRequest":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/superhqy/Desktop/zone/foyozone/src/components/templates/TemplateSingleModule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/superhqy/Desktop/zone/foyozone/src/components/templates/TemplateSingleModule.vue","mtime":1563247193795},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from \"vuedraggable\";\nimport EssayList from \"@/components/panelApps/EssayList\";\nimport CurrentVisitor from \"@/components/panelApps/CurrentVisitor\";\nimport UserInfo from \"@/components/panelApps/UserInfo\";\nimport LatestNews from \"@/components/panelApps/LatestNews\";\nimport MsgBoard from \"@/components/panelApps/MsgBoard\";\nimport Todo from \"@/components/panelApps/Todo\";\nimport { log } from 'util';\nimport Vue from 'vue';\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\n\nexport default {\n    name: \"TemplateSingleModule\",\n    components: {\n        draggable,\n        EssayList,\n        CurrentVisitor,\n        UserInfo,\n        LatestNews,\n        MsgBoard,\n        Todo,\n    },\n\n    props: [\"lists\"],\n\n    data() {\n        return {\n            display: \"Transition\",\n            cList: [],\n            shouldShowScale: false,\n            shouldShowItem: false,\n            shouldShowAddItem: false,\n        };\n    },\n\n\n    mounted() {\n        this.cList = this.lists;\n    },\n\n    computed: {\n        dragOptions() {\n            return {\n                animation: 0,\n                group: \"people\",\n                disabled: false,\n                ghostClass: \"ghost\"\n            };\n        },\n    },\n\n     watch: {\n        lists:{\n            handler (newV, oldV) {\n                this.cList = newV;\n            },\n            deep:true\n        }\n    },\n\n    methods: {\n        replace: function() {\n            this.list = [{ name: \"Edgard\" }];\n        },\n        clone: function(el) {\n            return {\n                name: el.name + \" cloned\"\n            };\n        },\n        log: function(evt) {\n            window.console.log(evt);\n            this.$store.dispatch('templateControl/setModuleListsTmp', this.cList);\n        },\n            \n        handleToggleTemplate(mode, id){\n            // console.log(\"mode\", mode);\n            // console.log(\"id\", id);\n            var payload = {newTemplateType: mode, moduleId: id};\n            this.$store.dispatch('templateControl/switchModeTmp', payload);\n        },\n    },\n\n\n};\n\n\nfunction printStruct(lists){\n    var str = \"\";\n    for (let j=0; j<lists.lists.length; j++){\n        for (let k=0; k<lists.lists[j].length; k++){\n            str += lists.lists[j][k].chiAlias + \" \";\n        } \n        str += '\\n';\n    }\n    \n    console.log(str);\n}\n",{"version":3,"sources":["TemplateSingleModule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"TemplateSingleModule.vue","sourceRoot":"src/components/templates","sourcesContent":["<template>\n    <div>\n        <div class=\"change-config-container\">\n            <div class=\"change-scale change-config\">\n                <button @click=\"shouldShowScale = !shouldShowScale;\">改变比例</button>\n                <div class=\"change-scale-bar-container\" v-if=\"shouldShowScale\" style=\"margin: 10px;\">\n                    <button @click=\"handleToggleTemplate('t121', lists.moduleId)\">1:2:1</button>\n                    <button @click=\"handleToggleTemplate('t13', lists.moduleId)\">1:3</button>\n                    <button @click=\"handleToggleTemplate('t22', lists.moduleId)\">2:2</button>\n                    <button @click=\"handleToggleTemplate('t31', lists.moduleId)\">3:1</button>\n                    <button @click=\"handleToggleTemplate('t1', lists.moduleId)\">占满整行</button>\n                </div>\n            </div>\n\n            <div class=\"change-item change-config\">\n                <button @click=\"shouldShowItem = !shouldShowItem;\">隐藏模块</button>\n                <div class=\"change-item-bar-container\" v-if=\"shouldShowItem\" style=\"margin: 10px;\">\n                    <button @click=\"handleToggleTemplate('t121', lists.moduleId)\">1:2:1</button>\n                    <button @click=\"handleToggleTemplate('t13', lists.moduleId)\">1:3</button>\n                    <button @click=\"handleToggleTemplate('t22', lists.moduleId)\">2:2</button>\n                    <button @click=\"handleToggleTemplate('t31', lists.moduleId)\">3:1</button>\n                    <button @click=\"handleToggleTemplate('t1', lists.moduleId)\">占满整行</button>\n                    <button @click=\"shouldShowAddItem = !shouldShowAddItem\">添加新模块</button>\n                    <div class=\"add-item-workplace\" v-if=\"shouldShowAddItem\">\n                        <div class=\"input-itemName\">模块名称: <input type=\"text\" id=\"itemName\"></div>\n                        <div class=\"input-itemUrl\">模块地址: <input type=\"text\" id=\"itemUrl\"></div>\n                        <div class=\"input-button\">\n                            <button @click=\"saveEditing\">保存</button>\n                            <button @click=\"cancelEditing\">取消</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n\n\n        <div v-for=\"(list,index) in cList.lists\" :class=\"cList.templateType + [`-${index}`]\">\n\n            <draggable class=\"list-group\" :list=\"lists.lists[index]\" v-bind=\"dragOptions\" group=\"people\" @change=\"log\" @start=\"isDragging = true\"\n                @end=\"isDragging = false\" tag=\"ul\">\n                <transition-group type=\"transition\" name=\"flip-list\">\n                    <li\n                        v-for=\"(element, index) in lists.lists[index]\"\n                        :key=\"element.name\"\n                    >\n\n                        <div \n                            class=\"list-group-item\"\n                            :class=\"'list-group-item' + [`-${element.name}`]\"\n                            v-if=\"element.shouldShow === true && element.shouldShowOnHome === true\"\n                        > \n                            <div class=\"zone-module\"><UserInfo v-if=\"element.id === 1\"/></div>\n                            <div class=\"zone-module\"><LatestNews v-if=\"element.id === 2\"/></div>\n                            <div class=\"zone-module\"><EssayList v-if=\"element.id === 3\"/></div>\n                            <div class=\"zone-module\"><MsgBoard v-if=\"element.id === 4\"/></div>\n                            <div class=\"zone-module\"><CurrentVisitor v-if=\"element.id === 5\"/></div>\n                            <div class=\"zone-module\"><Todo v-if=\"element.id === 6\"/></div>\n\n                        </div>\n                    </li>\n                </transition-group>\n            </draggable>\n        </div>\n    </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport EssayList from \"@/components/panelApps/EssayList\";\nimport CurrentVisitor from \"@/components/panelApps/CurrentVisitor\";\nimport UserInfo from \"@/components/panelApps/UserInfo\";\nimport LatestNews from \"@/components/panelApps/LatestNews\";\nimport MsgBoard from \"@/components/panelApps/MsgBoard\";\nimport Todo from \"@/components/panelApps/Todo\";\nimport { log } from 'util';\nimport Vue from 'vue';\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\n\nexport default {\n    name: \"TemplateSingleModule\",\n    components: {\n        draggable,\n        EssayList,\n        CurrentVisitor,\n        UserInfo,\n        LatestNews,\n        MsgBoard,\n        Todo,\n    },\n\n    props: [\"lists\"],\n\n    data() {\n        return {\n            display: \"Transition\",\n            cList: [],\n            shouldShowScale: false,\n            shouldShowItem: false,\n            shouldShowAddItem: false,\n        };\n    },\n\n\n    mounted() {\n        this.cList = this.lists;\n    },\n\n    computed: {\n        dragOptions() {\n            return {\n                animation: 0,\n                group: \"people\",\n                disabled: false,\n                ghostClass: \"ghost\"\n            };\n        },\n    },\n\n     watch: {\n        lists:{\n            handler (newV, oldV) {\n                this.cList = newV;\n            },\n            deep:true\n        }\n    },\n\n    methods: {\n        replace: function() {\n            this.list = [{ name: \"Edgard\" }];\n        },\n        clone: function(el) {\n            return {\n                name: el.name + \" cloned\"\n            };\n        },\n        log: function(evt) {\n            window.console.log(evt);\n            this.$store.dispatch('templateControl/setModuleListsTmp', this.cList);\n        },\n            \n        handleToggleTemplate(mode, id){\n            // console.log(\"mode\", mode);\n            // console.log(\"id\", id);\n            var payload = {newTemplateType: mode, moduleId: id};\n            this.$store.dispatch('templateControl/switchModeTmp', payload);\n        },\n    },\n\n\n};\n\n\nfunction printStruct(lists){\n    var str = \"\";\n    for (let j=0; j<lists.lists.length; j++){\n        for (let k=0; k<lists.lists[j].length; k++){\n            str += lists.lists[j][k].chiAlias + \" \";\n        } \n        str += '\\n';\n    }\n    \n    console.log(str);\n}\n</script>\n\n<style lang=\"scss\">\n.change-config {\n    margin: 10px;\n}\n</style>"]}]}