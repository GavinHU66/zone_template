{"remainingRequest":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/superhqy/Desktop/zone/foyozone/src/components/templates/HomeElement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/superhqy/Desktop/zone/foyozone/src/components/templates/HomeElement.vue","mtime":1563442466659},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { log } from 'util';\n\nexport default {\n  name: \"HomeElement\",\n  components: {},\n\n  data() {\n    return {\n      display: \"Transition\",\n\n      listObj: [] // initialized inside mounted(), updated inside watch\n    };\n  },\n\n  mounted(){\n    this.listObj = this.$store.state.templateControl.moduleLists;\n  },\n\n  watch: {\n      '$store.state.templateControl.moduleLists': {\n        deep: true,\n        handler: function(newVal, oldVal){\n          this.listObj = newVal;\n        }\n      }\n  },\n\n  methods: {\n    replace: function() {\n      this.listObj = [{ name: \"Edgard\" }];\n    },\n    clone: function(el) {\n      return {\n        name: el.name + \" cloned\"\n      };\n    },\n    log: function(evt) {\n      window.console.log(evt);\n    },\n  },\n\n  computed: {\n    dragOptions() {\n      return {\n        animation: 0,\n        group: \"people\",\n        disabled: false,\n        ghostClass: \"ghost\"\n      };\n    },\n  }\n};\n",{"version":3,"sources":["HomeElement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HomeElement.vue","sourceRoot":"src/components/templates","sourcesContent":["<template>\n    <div>\n        <HomeBar />\n        <div class=\"fy-row\" v-for=\"(lists, index) in listObj\"> \n            <div v-for=\"(list, index) in lists.lists\" :class=\"lists.scaleType + [`-${index}`]\">         \n                <div class=\"list-group\" :list=\"list[index]\">\n                    <li\n                      v-for=\"(element, index) in list\"\n                      :key=\"element.id\"\n                    >\n\n                        <div \n                          class=\"list-group-item myhome-list-group-item\"\n                          :class=\"'list-group-item' + [`-${element.name}`]\"\n                          v-if=\"element.shouldShow === true\" \n                        > \n                            <div v-if=\"element.name === 'ExternalItem' \">\n                                <div class=\"zone-module\"><component :is=\"element.name\" :externalSrc=\"element.externalSrc\"></component></div>\n                            </div>\n                            <div v-else>\n                                <div class=\"zone-module\"><component :is=\"element.name\"></component></div>\n                            </div>     \n                        </div>\n                    </li>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n\nimport { log } from 'util';\n\nexport default {\n  name: \"HomeElement\",\n  components: {},\n\n  data() {\n    return {\n      display: \"Transition\",\n\n      listObj: [] // initialized inside mounted(), updated inside watch\n    };\n  },\n\n  mounted(){\n    this.listObj = this.$store.state.templateControl.moduleLists;\n  },\n\n  watch: {\n      '$store.state.templateControl.moduleLists': {\n        deep: true,\n        handler: function(newVal, oldVal){\n          this.listObj = newVal;\n        }\n      }\n  },\n\n  methods: {\n    replace: function() {\n      this.listObj = [{ name: \"Edgard\" }];\n    },\n    clone: function(el) {\n      return {\n        name: el.name + \" cloned\"\n      };\n    },\n    log: function(evt) {\n      window.console.log(evt);\n    },\n  },\n\n  computed: {\n    dragOptions() {\n      return {\n        animation: 0,\n        group: \"people\",\n        disabled: false,\n        ghostClass: \"ghost\"\n      };\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.myhome-list-group-item {\n  cursor: default;\n}\n</style>"]}]}