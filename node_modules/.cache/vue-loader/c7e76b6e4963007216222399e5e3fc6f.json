{"remainingRequest":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/superhqy/Desktop/zone/foyozone/src/components/templates/TemplateSingleModule.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/superhqy/Desktop/zone/foyozone/src/components/templates/TemplateSingleModule.vue","mtime":1563262374558},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.change-list {\n    margin: 10px;\n}\n.change-option-bar {\n\n    #deleteModuleButton {\n        font-weight: bold;\n        float: right;\n        background-image: none;\n        color: white;\n        padding: 6px;\n        background-color: #ff9800;\n    }\n    #deleteModuleButton:hover{\n        background: #f44336;\n    }\n}\n",{"version":3,"sources":["TemplateSingleModule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TemplateSingleModule.vue","sourceRoot":"src/components/templates","sourcesContent":["<template>\n    <div>\n        <!-- {{cList.moduleId}} -->\n        <div class=\"change-config-container\">\n            <div class=\"change-option-bar\">\n                <button @click=\"shouldShowItem = !shouldShowItem;\">增减模块内容</button>\n                <button @click=\"shouldShowScale = !shouldShowScale;\">改变比例</button>          \n                <button @click=\"handleDeleteModule\" id=\"deleteModuleButton\">删除本模块</button>          \n            </div>\n\n            <div class=\"change-scale change-list\">\n                <div class=\"change-scale-bar-container\" v-if=\"shouldShowScale\" style=\"margin: 10px;\">\n                    <button @click=\"handleToggleTemplate('t121')\">1:2:1</button>\n                    <button @click=\"handleToggleTemplate('t13')\">1:3</button>\n                    <button @click=\"handleToggleTemplate('t22')\">2:2</button>\n                    <button @click=\"handleToggleTemplate('t31')\">3:1</button>\n                    <button @click=\"handleToggleTemplate('t1')\">占满整行</button>\n                </div>\n            </div>\n\n            <div class=\"change-item change-list\">\n                <div class=\"change-item-bar-container\" v-if=\"shouldShowItem\" style=\"margin: 10px;\">\n                    <span v-for=\"(list, index) in cList.lists\">\n                        <button \n                            v-for=\"(element, index) in list\"\n                            :key=\"element.name\"\n                            @click=\"toggleItem(element.name)\"\n                        >\n                            {{element.shouldShow? element.chiAlias : element.chiAlias + \"(已隐藏)\"}}\n                        </button>\n                    </span>\n                    <button @click=\"shouldShowAddItem = !shouldShowAddItem\">添加新模块</button>\n                    <div class=\"add-item-workplace\" v-if=\"shouldShowAddItem\">\n                        <div class=\"input-itemName\">模块名称: <input type=\"text\" id=\"itemName\"></div>\n                        <div class=\"input-itemUrl\">模块地址: <input type=\"text\" id=\"itemUrl\"></div>\n                        <div class=\"input-button\">\n                            <button @click=\"addNewItem\">添加</button>\n                            <button @click=\"shouldShowAddItem = !shouldShowAddItem\">取消</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div v-for=\"(list,index) in cList.lists\" :class=\"cList.templateType + [`-${index}`]\">\n\n            <draggable class=\"list-group\" :list=\"lists.lists[index]\" v-bind=\"dragOptions\" group=\"people\" @change=\"log\" @start=\"isDragging = true\"\n                @end=\"isDragging = false\" tag=\"ul\">\n                <transition-group type=\"transition\" name=\"flip-list\">\n                    <li\n                        v-for=\"(element, index) in lists.lists[index]\"\n                        :key=\"element.name\"\n                    >\n\n                        <div \n                            class=\"list-group-item\"\n                            :class=\"'list-group-item' + [`-${element.name}`]\"\n                            v-if=\"element.shouldShow === true\"\n                        >\n                            <div class=\"zone-module\"><UserInfo v-if=\"element.id === 1\"/></div>\n                            <div class=\"zone-module\"><LatestNews v-if=\"element.id === 2\"/></div>\n                            <div class=\"zone-module\"><EssayList v-if=\"element.id === 3\"/></div>\n                            <div class=\"zone-module\"><MsgBoard v-if=\"element.id === 4\"/></div>\n                            <div class=\"zone-module\"><CurrentVisitor v-if=\"element.id === 5\"/></div>\n                            <div class=\"zone-module\"><Todo v-if=\"element.id === 6\"/></div>\n                        </div>\n                    </li>\n                </transition-group>\n            </draggable>\n        </div>\n    </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport EssayList from \"@/components/panelApps/EssayList\";\nimport CurrentVisitor from \"@/components/panelApps/CurrentVisitor\";\nimport UserInfo from \"@/components/panelApps/UserInfo\";\nimport LatestNews from \"@/components/panelApps/LatestNews\";\nimport MsgBoard from \"@/components/panelApps/MsgBoard\";\nimport Todo from \"@/components/panelApps/Todo\";\nimport { log } from 'util';\nimport Vue from 'vue';\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\n\nexport default {\n    name: \"TemplateSingleModule\",\n    components: {\n        draggable,\n        EssayList,\n        CurrentVisitor,\n        UserInfo,\n        LatestNews,\n        MsgBoard,\n        Todo,\n    },\n\n    props: [\"lists\"],\n\n    data() {\n        return {\n            display: \"Transition\",\n            cList: [],\n            shouldShowScale: false,\n            shouldShowItem: false,\n            shouldShowAddItem: false,\n        };\n    },\n\n\n    mounted() {\n        this.cList = this.lists;\n    },\n\n    computed: {\n        dragOptions() {\n            return {\n                animation: 0,\n                group: \"people\",\n                disabled: false,\n                ghostClass: \"ghost\"\n            };\n        },\n    },\n\n     watch: {\n        lists:{\n            handler (newV, oldV) {\n                this.cList = newV;\n            },\n            deep:true\n        }\n    },\n\n    methods: {\n        replace: function() {\n            this.list = [{ name: \"Edgard\" }];\n        },\n        clone: function(el) {\n            return {\n                name: el.name + \" cloned\"\n            };\n        },\n        log: function(evt) {\n            window.console.log(evt);\n            this.$store.dispatch('templateControl/setModuleListsTmp', this.cList);\n        },\n            \n        handleToggleTemplate(mode){\n            var payload = {newTemplateType: mode, moduleId: this.cList.moduleId};\n            this.$store.dispatch('templateControl/switchModeTmp', payload);\n        },\n\n        handleDeleteModule(){\n            console.log(\"in methods: handleDeleteModule\");\n            if (confirm(\"确定要删除本模块所有内容？\")) {\n                console.log(\"你点了确定\");   \n                this.$store.commit('templateControl/deleteLists', {moduleId: this.cList.moduleId});                \n            } else {\n            }\n        },\n\n        toggleItem(elemName){\n            console.log(\"in methods: toggleItem\");\n            this.$store.commit('templateControl/toggleItemDisplay', {moduleId: this.cList.moduleId, name: elemName });\n        },\n\n\n        addNewItem(){\n            console.log(\"in methods: toggleItem\");\n            this.$store.commit('templateControl/addNewItem', {moduleId: this.cList.moduleId});\n            alert(\"已添加\");\n            shouldShowAddItem = !shouldShowAddItem\n        }\n\n\n    },\n\n\n};\n\n\nfunction printStruct(lists){\n    var str = \"\";\n    for (let j=0; j<lists.lists.length; j++){\n        for (let k=0; k<lists.lists[j].length; k++){\n            str += lists.lists[j][k].chiAlias + \" \";\n        } \n        str += '\\n';\n    }\n    \n    console.log(str);\n}\n</script>\n\n<style lang=\"scss\">\n.change-list {\n    margin: 10px;\n}\n.change-option-bar {\n\n    #deleteModuleButton {\n        font-weight: bold;\n        float: right;\n        background-image: none;\n        color: white;\n        padding: 6px;\n        background-color: #ff9800;\n    }\n    #deleteModuleButton:hover{\n        background: #f44336;\n    }\n}\n</style>"]}]}