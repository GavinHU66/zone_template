{"remainingRequest":"/Users/superhqy/Desktop/zone/foyozone/node_modules/babel-loader/lib/index.js!/Users/superhqy/Desktop/zone/foyozone/src/store/modules/itemTmp.js","dependencies":[{"path":"/Users/superhqy/Desktop/zone/foyozone/src/store/modules/itemTmp.js","mtime":1563341567207},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superhqy/Desktop/zone/foyozone/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var ls_shouldUse2ColsMode = true;\nvar ls_shouldUse3ColsMode = false;\nvar ls_currentMode = \"twoCols\";\nvar ls_moduleLists = [[{\n  name: \"UserInfo\",\n  id: 1,\n  chiAlias: \"个人资料\",\n  shouldShow: true\n}, {\n  name: \"LatestNews\",\n  id: 2,\n  chiAlias: \"最新消息\",\n  shouldShow: true\n}, {\n  name: \"Todo\",\n  id: 6,\n  chiAlias: \"待办消息\",\n  shouldShow: true\n}], [{\n  name: \"EssayList\",\n  id: 3,\n  chiAlias: \"近期文章\",\n  shouldShow: true\n}, {\n  name: \"MsgBoard\",\n  id: 4,\n  chiAlias: \"留言板\",\n  shouldShow: true\n}, {\n  name: \"CurrentVisitor\",\n  id: 5,\n  chiAlias: \"最近访客\",\n  shouldShow: true\n}], []];\n\ntry {\n  if (localStorage) {\n    // console.log(\"we have localStorage\")\n    if (localStorage.getItem(\"ls_shouldUse2ColsMode\") !== null) {\n      ls_shouldUse2ColsMode = localStorage.getItem(\"ls_shouldUse2ColsMode\") === 'true';\n    }\n\n    if (localStorage.getItem(\"ls_shouldUse3ColsMode\") !== null) {\n      ls_shouldUse3ColsMode = localStorage.getItem(\"ls_shouldUse3ColsMode\") === 'true';\n    }\n\n    if (localStorage.getItem(\"ls_currentMode\") !== null) {\n      ls_currentMode = localStorage.getItem(\"ls_currentMode\");\n    }\n\n    if (localStorage.getItem(\"ls_moduleLists\") !== null) {\n      ls_moduleLists = JSON.parse(localStorage.getItem(\"ls_moduleLists\"));\n    }\n  }\n} catch (e) {\n  console.log(\"we don't have localStorage\");\n}\n\nvar itemTmp = {\n  namespaced: true,\n  state: {\n    shouldUse2ColsModeTmp: ls_shouldUse2ColsMode,\n    shouldUse3ColsModeTmp: ls_shouldUse3ColsMode,\n    currentModeTmp: ls_currentMode,\n    moduleListsTmp: ls_moduleLists\n  },\n  mutations: {\n    toggleModuleDisplayTmp: function toggleModuleDisplayTmp(state, payload) {\n      var id = parseInt(payload.id);\n\n      for (var i = 0; i < state.moduleListsTmp.length; i++) {\n        for (var j = 0; j < state.moduleListsTmp[i].length; j++) {\n          if (state.moduleListsTmp[i][j].id == id) {\n            state.moduleListsTmp[i][j].shouldShow = !state.moduleListsTmp[i][j].shouldShow;\n            break;\n          }\n        }\n      }\n    },\n    switchModeTmp: function switchModeTmp(state, payload) {\n      console.log(\"in mutations: switchModeTmp\");\n      console.log(\"payload\", payload);\n\n      if (payload.currentModeTmp !== state.currentModeTmp) {\n        // payload.currentMode is the new mode, state.currentMode is the former mode\n        console.log(\"now switch mode, from \" + state.currentModeTmp + \" to \" + payload.currentModeTmp);\n        state.currentModeTmp = payload.currentModeTmp;\n        state.shouldUse2ColsModeTmp = !state.shouldUse2ColsModeTmp;\n        state.shouldUse3ColsModeTmp = !state.shouldUse3ColsModeTmp;\n\n        if (state.shouldUse2ColsModeTmp) {\n          // switch from 3 cols mode to 2 cols mode\n          // move the modules from the 3rd col to the 2nd col\n          console.log(\"move the modules from the 3rd col to the 2nd col\");\n\n          if (state.moduleListsTmp[2].length !== 0) {\n            state.moduleListsTmp[1] = state.moduleListsTmp[1].concat(state.moduleListsTmp[2]);\n            state.moduleListsTmp[2] = []; // 3rd col become empty\n          }\n        }\n\n        if (state.shouldUse3ColsModeTmp) {\n          // switch from 2 cols mode to 3 cols mode\n          // move the last module in the 2nd col to the 3rd col\n          console.log(\"move the last module in the 2nd col to the 3rd col\");\n\n          if (state.moduleListsTmp[1].length !== 0) {\n            var lastModule = state.moduleListsTmp[1].pop(); // last module in 2nd col\n\n            state.moduleListsTmp[2].push(lastModule); // push to the 3rd col\n          }\n        }\n\n        state.moduleListsTmp = JSON.parse(JSON.stringify(state.moduleListsTmp));\n      }\n    },\n    setModuleListsTmp: function setModuleListsTmp(state, payload) {\n      state.moduleListsTmp = payload.moduleListsTmp;\n    }\n  },\n  actions: {\n    toggleModuleDisplayTmp: function toggleModuleDisplayTmp(_ref, payload) {\n      var commit = _ref.commit;\n      commit(\"toggleModuleDisplayTmp\", payload);\n    },\n    switchModeTmp: function switchModeTmp(_ref2, payload) {\n      var commit = _ref2.commit;\n      commit(\"switchModeTmp\", payload);\n    },\n    setModuleListsTmp: function setModuleListsTmp(_ref3, payload) {\n      var commit = _ref3.commit;\n      commit(\"setModuleListsTmp\", payload);\n    }\n  }\n};\nexport default itemTmp;",{"version":3,"sources":["/Users/superhqy/Desktop/zone/foyozone/src/store/modules/itemTmp.js"],"names":["ls_shouldUse2ColsMode","ls_shouldUse3ColsMode","ls_currentMode","ls_moduleLists","name","id","chiAlias","shouldShow","localStorage","getItem","JSON","parse","e","console","log","itemTmp","namespaced","state","shouldUse2ColsModeTmp","shouldUse3ColsModeTmp","currentModeTmp","moduleListsTmp","mutations","toggleModuleDisplayTmp","payload","parseInt","i","length","j","switchModeTmp","concat","lastModule","pop","push","stringify","setModuleListsTmp","actions","commit"],"mappings":"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","sourcesContent":["\nlet ls_shouldUse2ColsMode = true;\nlet ls_shouldUse3ColsMode = false;\nlet ls_currentMode = \"twoCols\";\nlet ls_moduleLists = [     \n        [\n            { name: \"UserInfo\", id: 1, chiAlias: \"个人资料\", shouldShow: true },\n            { name: \"LatestNews\", id: 2, chiAlias: \"最新消息\", shouldShow: true },\n            { name: \"Todo\", id: 6, chiAlias: \"待办消息\", shouldShow: true },\n        ],\n        [\n            { name: \"EssayList\", id: 3, chiAlias: \"近期文章\", shouldShow: true },\n            { name: \"MsgBoard\", id: 4, chiAlias: \"留言板\", shouldShow: true },\n            { name: \"CurrentVisitor\", id: 5, chiAlias: \"最近访客\", shouldShow: true },\n        ],\n        [\n\n        ]\n    ];\n\n\n\ntry {\n    if (localStorage) {\n        // console.log(\"we have localStorage\")\n\n        if (localStorage.getItem(\"ls_shouldUse2ColsMode\") !== null){\n            ls_shouldUse2ColsMode = (localStorage.getItem(\"ls_shouldUse2ColsMode\") === 'true');\n        }\n        if (localStorage.getItem(\"ls_shouldUse3ColsMode\") !== null){\n            ls_shouldUse3ColsMode = (localStorage.getItem(\"ls_shouldUse3ColsMode\") === 'true');\n        }\n        if (localStorage.getItem(\"ls_currentMode\") !== null){\n            ls_currentMode = localStorage.getItem(\"ls_currentMode\");\n        }\n        if (localStorage.getItem(\"ls_moduleLists\") !== null){\n            ls_moduleLists = JSON.parse(localStorage.getItem(\"ls_moduleLists\"));\n        }\n    }\n} catch (e) {console.log(\"we don't have localStorage\")}\n\nconst itemTmp = {\n\n    namespaced: true,\n\n    state: {\n        shouldUse2ColsModeTmp: ls_shouldUse2ColsMode,\n        shouldUse3ColsModeTmp: ls_shouldUse3ColsMode,\n        currentModeTmp: ls_currentMode,\n        moduleListsTmp: ls_moduleLists,\n    },\n\n    mutations: {\n\n        toggleModuleDisplayTmp (state, payload) {\n            var id = parseInt(payload.id);\n            for (var i=0; i<state.moduleListsTmp.length; i++){\n                for (var j=0; j<state.moduleListsTmp[i].length; j++){\n                    if (state.moduleListsTmp[i][j].id == id){\n                        state.moduleListsTmp[i][j].shouldShow = !state.moduleListsTmp[i][j].shouldShow;\n                        break;\n                    }\n                }\n            }\n        },\n\n        switchModeTmp(state, payload){\n            console.log(\"in mutations: switchModeTmp\")\n\n            console.log(\"payload\", payload)\n\n            if (payload.currentModeTmp !== state.currentModeTmp){\n                // payload.currentMode is the new mode, state.currentMode is the former mode\n                console.log(\"now switch mode, from \" + state.currentModeTmp + \" to \" + payload.currentModeTmp)\n                state.currentModeTmp = payload.currentModeTmp;\n                state.shouldUse2ColsModeTmp = !state.shouldUse2ColsModeTmp;\n                state.shouldUse3ColsModeTmp = !state.shouldUse3ColsModeTmp;\n\n                if (state.shouldUse2ColsModeTmp){\n                    // switch from 3 cols mode to 2 cols mode\n                    // move the modules from the 3rd col to the 2nd col\n                    console.log(\"move the modules from the 3rd col to the 2nd col\")\n                    if (state.moduleListsTmp[2].length !== 0){\n                        state.moduleListsTmp[1] = state.moduleListsTmp[1].concat(state.moduleListsTmp[2]);\n                        state.moduleListsTmp[2] = []; // 3rd col become empty\n                    }\n                } \n                if (state.shouldUse3ColsModeTmp){\n                    // switch from 2 cols mode to 3 cols mode\n                    // move the last module in the 2nd col to the 3rd col\n                    console.log(\"move the last module in the 2nd col to the 3rd col\")\n                    if (state.moduleListsTmp[1].length !== 0){\n                        var lastModule = state.moduleListsTmp[1].pop(); // last module in 2nd col\n                        state.moduleListsTmp[2].push(lastModule); // push to the 3rd col\n                    }\n                }\n                state.moduleListsTmp = JSON.parse(JSON.stringify(state.moduleListsTmp));\n            }\n        },\n\n        setModuleListsTmp(state, payload){\n            state.moduleListsTmp = payload.moduleListsTmp;\n        }\n\n    },\n\n    actions: {\n        toggleModuleDisplayTmp({commit}, payload){\n            commit(\"toggleModuleDisplayTmp\", payload);\n        },\n        switchModeTmp({commit}, payload){\n            commit(\"switchModeTmp\", payload);\n        },\n        setModuleListsTmp({commit}, payload){\n            commit(\"setModuleListsTmp\", payload);\n        }\n    },\n\n  }\n  \n  export default itemTmp\n  "]}]}